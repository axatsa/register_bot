import telebot
import database as db
import buttons as kb

TOKEN = '7804737490:AAFww263GimgmCuHLIdmZqAptxruMJPyqVk'
bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def start(message):
    if not db.is_registered(message.from_user.id):
        bot.reply_to(
            message,
            "–ü—Ä–∏–≤–µ—Ç! –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.",
            reply_markup=kb.create_contact_keyboard()
        )
        db.save_user_data(message.from_user.id, message.from_user.username)
    else:
        user_info = db.get_user_info(message.from_user.id)
        if user_info[2] is None:
            bot.reply_to(
                message,
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                reply_markup=kb.create_contact_keyboard()
            )
        elif user_info[3] is None:
            bot.reply_to(
                message,
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                reply_markup=kb.create_location_keyboard()
            )
        else:
            welcome_back(message)


def welcome_back(message):
    user_info = db.get_user_info(message.from_user.id)
    name = message.from_user.first_name
    bot.reply_to(
        message,
        f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {name}! üëã\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é –≤ –º–µ–Ω—é:",
        reply_markup=kb.create_main_keyboard()
    )


@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    if message.contact is not None:
        phone = message.contact.phone_number
        db.save_user_data(message.from_user.id, message.from_user.username, phone=phone)
        bot.reply_to(
            message,
            "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é.",
            reply_markup=kb.create_location_keyboard()
        )


@bot.message_handler(content_types=['location'])
def handle_location(message):
    if message.location is not None:
        db.save_user_data(
            message.from_user.id,
            message.from_user.username,
            latitude=message.location.latitude,
            longitude=message.location.longitude
        )
        bot.reply_to(
            message,
            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! ‚úÖ\n"
            "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —è–∑—ã–∫.",
            reply_markup=kb.language_keyboard()  # –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
        )


@bot.message_handler(func=lambda message: message.text == "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
def show_profile(message):
    user_info = db.get_user_info(message.from_user.id)
    if user_info:
        profile_text = (
            f"üì± –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n"
            f"–ò–º—è: {message.from_user.first_name}\n"
            f"Username: @{user_info[1]}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {user_info[2]}\n"
            f"–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user_info[5]}\n"
        )
        bot.reply_to(message, profile_text, reply_markup=kb.create_main_keyboard())


@bot.message_handler(func=lambda message: message.text in ["–†—É—Å—Å–∫–∏–π", "English"])
def handle_language_choice(message):
    language = "ru" if message.text == "–†—É—Å—Å–∫–∏–π" else "en"
    db.choose_language(message.from_user.id, language)  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —è–∑—ã–∫–∞ –≤ –±–∞–∑–µ
    bot.reply_to(
        message,
        f"–Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {'–†—É—Å—Å–∫–∏–π' if language == 'ru' else 'English'}!",
        reply_markup=kb.create_main_keyboard()
    )


bot.infinity_polling()
